Using ``add_integer``
---------------------
This is a text file in reStructuredText format.
It contains a test for the add_integer function in the 0-add_integer module.
First import ``add_integer`` from the ``0-add_integer`` module:
    Test 00 Open 0-add_integer
    >>> add_integer = __import__('0-add_integer').add_integer

Now test:
    Test 01: Two positive integers passed
    >>> add_integer(6, 7)
    13

    Test 02: two float passed
    >>> add_integer(1.5, 2.5)
    3

    Test 03: two integer passed one negative integer
    >>> add_integer(100, -2)
    98

    Test 04: one float and one negative integer passed
    >>> add_integer(100.3, -2)
    98

    Test 05: one integer, and one negative integer passed
    >>> add_integer(2, -2)
    0

    Test 07: Two characters passed  
    >>> add_integer('a','b')
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

     
    Test 08: One value infinity passed  
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    Test 09: value NAN passed  
    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
